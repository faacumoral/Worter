@page "/vocabulary"
@inject APIClient APIClient
@inject ToastService toastService
@using Worter.DTO.Language

<div class="row form-row">
    <div class="col-lg-2 col-sm-4">Languages:</div>
    <div class="col-lg-4 col-sm-8">
        <select class="form-control" @bind="newWord.IdLanguage">
            <option value="0"></option>
            @foreach (var lang in languages)
            {
                <option value="@lang.IdLanguage">@lang.Name</option>
            }
        </select>
    </div>
</div>

<div class="row form-row">
    <div class="col-lg-2 col-sm 4">
        Original meaning:
    </div>
    <div class="col-lg-4 col-sm-8">
         <input class="form-control" @bind="newWord.OriginalMeaning" />
    </div>
</div>

<div class="row form-row">
    <div class="col-lg-2 col-sm 4">
        Translate meaning:
    </div>
    <div class="col-lg-4 col-sm-8">
        <input class="form-control" @bind="newWord.TranslateMeaning" />
    </div>
</div>


<button class="btn btn-success" @onclick="AddWord">Add new</button>

@code {

    private WordDTO newWord = new WordDTO();
    private List<Worter.DTO.Language.LanguageDTO> languages = new List<DTO.Language.LanguageDTO>();

    private async void AddWord()
    {
        if (string.IsNullOrEmpty(newWord.OriginalMeaning))
        {
            toastService.ShowError("Complete original meaning field");
            return;
        }

        if (string.IsNullOrEmpty(newWord.TranslateMeaning))
        {
            toastService.ShowError("Complete translate meaning field");
            return;
        }

        if (newWord.IdLanguage == 0)
        {
            toastService.ShowError("Pick a language");
            return;
        }

        var apiRequest = Request.BuildPost("Word/Add", newWord);

        var addRequest= await APIClient.Send<IntResult>(apiRequest);

        if (addRequest.Success)
        {
            toastService.ShowSucces("New word added correctly");
            newWord = new WordDTO();
            StateHasChanged();
        }
        else
        {
            toastService.ShowError("An error has ocurred");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var apiRequest = Request.BuildGet("Language/GetAll");

        var response = await APIClient.Send<ListResult<Worter.DTO.Language.LanguageDTO>>(apiRequest);

        if (response.Success)
        {
            languages = response.ResultOk;
        }
        else
        {
            toastService.ShowToast(response.ResultError.FriendlyErrorMessage, ToastLevel.Error);
        }
    }

}
